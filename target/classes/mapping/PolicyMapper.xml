<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="stdu.wzw.mapper.PolicyMapper">
    <resultMap id="BaseResultMap" type="stdu.wzw.model.Policy">
        <id column="policy_id" property="policyId" jdbcType="INTEGER"/>
        <result column="policy_name" property="policyName" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="upload_date" property="uploadDate" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="policy_type" property="policyType" jdbcType="INTEGER"/>
        <result column="start_date" property="startDate" jdbcType="TIMESTAMP"/>
        <result column="end_date" property="endDate" jdbcType="TIMESTAMP"/>
        <result column="policy_grade" property="policyGrade" jdbcType="INTEGER"/>
        <result column="precursor" property="precursor" jdbcType="INTEGER"/>
        <result column="successor" property="successor" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    policy_id, policy_name, url, upload_date, status, user_id, policy_type, start_date, 
    end_date, policy_grade, precursor, successor
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from policy
        where policy_id = #{policyId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from policy
    where policy_id = #{policyId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="stdu.wzw.model.Policy">
    insert into policy (policy_id, policy_name, url, 
      upload_date, status, user_id, 
      policy_type, start_date, end_date, 
      policy_grade, precursor, successor
      )
    values (#{policyId,jdbcType=INTEGER}, #{policyName,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{uploadDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{policyType,jdbcType=INTEGER}, #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, 
      #{policyGrade,jdbcType=INTEGER}, #{precursor,jdbcType=INTEGER}, #{successor,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="stdu.wzw.model.Policy">
        insert into policy
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="policyId != null">
                policy_id,
            </if>
            <if test="policyName != null">
                policy_name,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="uploadDate != null">
                upload_date,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="policyType != null">
                policy_type,
            </if>
            <if test="startDate != null">
                start_date,
            </if>
            <if test="endDate != null">
                end_date,
            </if>
            <if test="policyGrade != null">
                policy_grade,
            </if>
            <if test="precursor != null">
                precursor,
            </if>
            <if test="successor != null">
                successor,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="policyId != null">
                #{policyId,jdbcType=INTEGER},
            </if>
            <if test="policyName != null">
                #{policyName,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="uploadDate != null">
                #{uploadDate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="policyType != null">
                #{policyType,jdbcType=INTEGER},
            </if>
            <if test="startDate != null">
                #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=TIMESTAMP},
            </if>
            <if test="policyGrade != null">
                #{policyGrade,jdbcType=INTEGER},
            </if>
            <if test="precursor != null">
                #{precursor,jdbcType=INTEGER},
            </if>
            <if test="successor != null">
                #{successor,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="stdu.wzw.model.Policy">
        update policy
        <set>
            <if test="policyName != null">
                policy_name = #{policyName,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="uploadDate != null">
                upload_date = #{uploadDate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="policyType != null">
                policy_type = #{policyType,jdbcType=INTEGER},
            </if>
            <if test="startDate != null">
                start_date = #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null">
                end_date = #{endDate,jdbcType=TIMESTAMP},
            </if>
            <if test="policyGrade != null">
                policy_grade = #{policyGrade,jdbcType=INTEGER},
            </if>
            <if test="precursor != null">
                precursor = #{precursor,jdbcType=INTEGER},
            </if>
            <if test="successor != null">
                successor = #{successor,jdbcType=INTEGER},
            </if>
        </set>
        where policy_id = #{policyId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="stdu.wzw.model.Policy">
    update policy
    set policy_name = #{policyName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      upload_date = #{uploadDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      policy_type = #{policyType,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      policy_grade = #{policyGrade,jdbcType=INTEGER},
      precursor = #{precursor,jdbcType=INTEGER},
      successor = #{successor,jdbcType=INTEGER}
    where policy_id = #{policyId,jdbcType=INTEGER}
  </update>
    <select id="findBylist" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT * from Policy
        <where>
            <if test="null!=policyName and ''!=policyName">
                AND policy_name LIKE concat('%',#{policyName},'%')
            </if>
            <if test="null!=status">
                AND status = #{status}
            </if>
            <if test="null!=start and ''!=start">
                AND DATE(upload_date) &gt;=#{start}
            </if>
            <if test="null!=end and ''!=end">
                AND DATE(upload_date) &lt;=#{end}
            </if>
        </where>
        ORDER BY upload_date DESC
    </select>
    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from policy
    </select>
    <insert id="insertAndGetKey" keyProperty="policyId" parameterType="stdu.wzw.model.Policy" useGeneratedKeys="true">
    insert into policy (policy_id, policy_name, url,
    upload_date, status, user_id,
    policy_type, start_date, end_date,
    policy_grade, precursor, successor
    )
    values (#{policyId,jdbcType=INTEGER}, #{policyName,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR},
    #{uploadDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
    #{policyType,jdbcType=INTEGER}, #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP},
    #{policyGrade,jdbcType=INTEGER}, #{precursor,jdbcType=INTEGER}, #{successor,jdbcType=INTEGER}
    )
  </insert>
    <select id="getByPolicyType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from policy
        WHERE policy_type=#{policyType,jdbcType=INTEGER}
    </select>
    <select id="findByLikePolicyName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from policy
        WHERE policy_name LIKE #{policyName,jdbcType=VARCHAR}
    </select>
    <select id="findByPolicyName" resultType="stdu.wzw.model.Policy" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from policy
        WHERE policy_name = #{policyName,jdbcType=VARCHAR}
    </select>
    <select id="getByGrade" resultType="stdu.wzw.model.Policy" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from policy
        WHERE policy_grade = #{gradeId,jdbcType=INTEGER}
    </select>
    <select id="getByPolicyTypeAndGrade" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from policy
        WHERE policy_grade = #{gradeId,jdbcType=INTEGER}
        AND policy_type=#{policyType,jdbcType=INTEGER}
    </select>
</mapper>