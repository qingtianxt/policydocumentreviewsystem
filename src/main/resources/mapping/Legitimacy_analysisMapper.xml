<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="stdu.wzw.mapper.Legitimacy_analysisMapper">
    <resultMap id="BaseResultMap" type="stdu.wzw.model.Legitimacy_analysis">
        <id column="legitimacy_id" property="legitimacyId" jdbcType="INTEGER"/>
        <result column="analysis_id" property="analysisId" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="info" property="info" jdbcType="VARCHAR"/>
        <result column="review_id" property="reviewId" jdbcType="INTEGER"/>
        <result column="legitimacy" property="legitimacy" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    legitimacy_id, analysis_id, type, info, review_id, legitimacy
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from legitimacyanalysis
        where legitimacy_id = #{legitimacyId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from legitimacyanalysis
    where legitimacy_id = #{legitimacyId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="stdu.wzw.model.Legitimacy_analysis">
    insert into legitimacyanalysis (legitimacy_id, analysis_id, type, 
      info, review_id, legitimacy
      )
    values (#{legitimacyId,jdbcType=INTEGER}, #{analysisId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{info,jdbcType=VARCHAR}, #{reviewId,jdbcType=INTEGER}, #{legitimacy,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="stdu.wzw.model.Legitimacy_analysis">
        insert into legitimacyanalysis
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="legitimacyId != null">
                legitimacy_id,
            </if>
            <if test="analysisId != null">
                analysis_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="info != null">
                info,
            </if>
            <if test="reviewId != null">
                review_id,
            </if>
            <if test="legitimacy != null">
                legitimacy,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="legitimacyId != null">
                #{legitimacyId,jdbcType=INTEGER},
            </if>
            <if test="analysisId != null">
                #{analysisId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="info != null">
                #{info,jdbcType=VARCHAR},
            </if>
            <if test="reviewId != null">
                #{reviewId,jdbcType=INTEGER},
            </if>
            <if test="legitimacy != null">
                #{legitimacy,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="stdu.wzw.model.Legitimacy_analysis">
        update legitimacyanalysis
        <set>
            <if test="analysisId != null">
                analysis_id = #{analysisId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="info != null">
                info = #{info,jdbcType=VARCHAR},
            </if>
            <if test="reviewId != null">
                review_id = #{reviewId,jdbcType=INTEGER},
            </if>
            <if test="legitimacy != null">
                legitimacy = #{legitimacy,jdbcType=INTEGER},
            </if>
        </set>
        where legitimacy_id = #{legitimacyId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="stdu.wzw.model.Legitimacy_analysis">
    update legitimacyanalysis
    set analysis_id = #{analysisId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      info = #{info,jdbcType=VARCHAR},
      review_id = #{reviewId,jdbcType=INTEGER},
      legitimacy = #{legitimacy,jdbcType=INTEGER}
    where legitimacy_id = #{legitimacyId,jdbcType=INTEGER}
  </update>

    <select id="getByAnalysisId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from legitimacyanalysis
        where type &lt; 8 and analysis_id = #{analysisId,jdbcType=INTEGER}
    </select>

    <select id="getByReviewId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from legitimacyanalysis
        where type == 8 and review_id = #{reviewId,jdbcType=INTEGER}
    </select>

    <select id="getAllByReviewId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from legitimacyanalysis
        where review_id = #{reviewId,jdbcType=INTEGER}
    </select>
</mapper>