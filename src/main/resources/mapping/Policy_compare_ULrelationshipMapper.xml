<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="stdu.wzw.mapper.Policy_compare_ULrelationshipMapper">
    <resultMap id="BaseResultMap" type="stdu.wzw.model.Policy_compare_ULrelationship">
        <id column="relationship_id" property="relationshipId" jdbcType="INTEGER"/>
        <result column="review_id" property="reviewId" jdbcType="INTEGER"/>
        <result column="policy_id" property="policyId" jdbcType="INTEGER"/>
        <result column="grade_id" property="gradeId" jdbcType="INTEGER"/>
        <result column="place_id" property="placeId" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    relationship_id, review_id, policy_id, grade_id, place_id, type
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from policycompareulrelationship
        where relationship_id = #{relationshipId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from policycompareulrelationship
    where relationship_id = #{relationshipId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="stdu.wzw.model.Policy_compare_ULrelationship">
    insert into policycompareulrelationship (relationship_id, review_id, policy_id, 
      grade_id, place_id, type
      )
    values (#{relationshipId,jdbcType=INTEGER}, #{reviewId,jdbcType=INTEGER}, #{policyId,jdbcType=INTEGER}, 
      #{gradeId,jdbcType=INTEGER}, #{placeId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="stdu.wzw.model.Policy_compare_ULrelationship">
        insert into policycompareulrelationship
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="relationshipId != null">
                relationship_id,
            </if>
            <if test="reviewId != null">
                review_id,
            </if>
            <if test="policyId != null">
                policy_id,
            </if>
            <if test="gradeId != null">
                grade_id,
            </if>
            <if test="placeId != null">
                place_id,
            </if>
            <if test="type != null">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="relationshipId != null">
                #{relationshipId,jdbcType=INTEGER},
            </if>
            <if test="reviewId != null">
                #{reviewId,jdbcType=INTEGER},
            </if>
            <if test="policyId != null">
                #{policyId,jdbcType=INTEGER},
            </if>
            <if test="gradeId != null">
                #{gradeId,jdbcType=INTEGER},
            </if>
            <if test="placeId != null">
                #{placeId,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="stdu.wzw.model.Policy_compare_ULrelationship">
        update policycompareulrelationship
        <set>
            <if test="reviewId != null">
                review_id = #{reviewId,jdbcType=INTEGER},
            </if>
            <if test="policyId != null">
                policy_id = #{policyId,jdbcType=INTEGER},
            </if>
            <if test="gradeId != null">
                grade_id = #{gradeId,jdbcType=INTEGER},
            </if>
            <if test="placeId != null">
                place_id = #{placeId,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
        </set>
        where relationship_id = #{relationshipId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="stdu.wzw.model.Policy_compare_ULrelationship">
    update policycompareulrelationship
    set review_id = #{reviewId,jdbcType=INTEGER},
      policy_id = #{policyId,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER},
      place_id = #{placeId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>

    <select id="getByReviewId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from policycompareulrelationship
        where review_id = #{reviewId,jdbcType=INTEGER}
    </select>
    <select id="getByReviewIdAndGrade" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from policycompareulrelationship
        where review_id = #{reviewId,jdbcType=INTEGER}
        AND grade_id=#{grade,jdbcType=INTEGER}
    </select>
</mapper>